---

# 1) Get NAT Policy ID by Name (sd_get_nat_policy)
# 2) Get NAT Rule Group ID by Policy ID (sd_get_nat_rules)
# 3) Get NAT Rules by NAT Rule Group ID (sd_get_nat_rule_group)
# 4) Save rule count (index is 0 so total count is next available index)
# 5) Get NAT Rule by Rule ID (sd_get_nat_rule)

- name: SD API Example - Add SNAT Rule
  hosts: all
  connection: local
  gather_facts: no

  vars:
    space_api_uri: "https://{{ ansible_host }}:{{ space_api_port }}/api"
    space_api_login_uri : "space/user-management/login"
    ssl_verification: no

# NAT Policy >> Rules >> Rule Group >> Rules

  tasks:
    - import_role:
        name: junos_space
        tasks_from: login
    
    - import_role:
        name: junos_space
        tasks_from: sd_get_nat_policy
      vars:
        policy_name: test_policy
    
    - name: Save NAT Policy ID
      set_fact:
        policy_id: "{{ result.json.policies.policy.0.id }}"
    
    - import_role:
        name: junos_space
        tasks_from: sd_get_nat_rules
      vars:
        policy_id: "{{ policy_id }}"
    
    - name: Save NAT Rule Group ID
      set_fact:
        rule_group_id: "{{ result.json['dc-nat-rules'].rule.0.id }}"

    - import_role:
        name: junos_space
        tasks_from: sd_get_nat_rule_group
      vars:
        rule_group_id: "{{ rule_group_id }}"
    
    - name: Save rule count
      set_fact:
        rule_count: "{{ result.json['dc-nat-rules'].total }}"

    - import_role:
        name: junos_space
        tasks_from: sd_add_snat_rule
      vars:
        policy_id: "{{ policy_id }}"
        rule_group_id: "{{ rule_group_id }}"
        rule_order: "{{ rule_count }}" # since list is indexed at 0 we can use the count as the next available rule order #
        rule_name: "device4"
        rule_description: "Test"
        src_address:
            name: Any-IPv4
            id: 196609
        src_zone: trust
        dst_address:
            name: Any-IPv4
            id: 196609
        service:
            name: Any
            id: 163840
        dst_zone: untrust

    - debug:
        var: result

    - import_role:
        name: junos_space
        tasks_from: logout
